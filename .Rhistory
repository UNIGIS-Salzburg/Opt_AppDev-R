quarto render
matrix_data <- matrix(1:9, nrow=3)
matrix_data
first_column_range <- range(matrix_data[,1])
first_column_range
list_data <- list(num_vector = 1:5, char_vector = c("a", "b", "c"))
list_data
numeric_ranges <- lapply(list_data, function(x) if(is.numeric(x)) range(x))
numeric_ranges
numeric_ranges
View(numeric_ranges)
employees <- data.frame(
EmployeeName = c("Maria", "Pete", "Sarah"),
Age = c(47, 34, 32),
Role = c("Professor", "Researcher", "Researcher"))
current_year <- as.integer(format(Sys.Date(), "%Y"))
employees$Year_of_birth <- current_year - employees$Age
employees
# Create a point
point <- sf::st_point(c(5, 5))
# Convert to sf object
point_sf <- sf::st_sf(geometry = sf::st_sfc(point))
View(point_sf)
# Create a point
point <- sf::st_point(c(5, 5))
# Convert to sf object
point_sf <- sf::st_sf(geometry = sf::st_sfc(point))
point_sf$name <- c("my location")
View(point_sf)
View(point_sf)
View(point_sf)
# Create a point
point <- sf::st_point(c(5, 5))
# Convert to sf object
point_sf <- sf::st_sf(geometry = sf::st_sfc(point))
point_sf$name <- c("my location")
View(point_sf)
geom = sf::st_sfc(sf::st_point(c(6, 8))
n = c("your location")
# Create a point
point <- sf::st_point(c(5, 5))
# Convert to sf object
point_sf <- sf::st_sf(geometry = sf::st_sfc(point))
point_sf$name <- c("my location")
geom = sf::st_sfc(sf::st_point(c(6, 8))
n = c("your location")
sf::st_point(c(6, 8)
sf::st_point(c(6, 8)
sf::st_point(c(5, 5))
geom = sf::st_sfc(sf::st_point(c(6, 8)))
n = c("your location")
sec_point_sf <- sf::st_sf(geometry = geom, name = n)
# Create a point
point <- sf::st_point(c(5, 5))
# Convert to sf object
point_sf <- sf::st_sf(geometry = sf::st_sfc(point))
point_sf$name <- c("my location")
geom = sf::st_sfc(sf::st_point(c(6, 8)))
n = c("your location")
sec_point_sf <- sf::st_sf(geometry = geom, name = n)
two_points_sf <- rbind(point_sf, sec_point_sf)
View(two_points_sf)
# Create first feature
point <- sf::st_point(c(5, 5))
point_sf <- sf::st_sf(geometry = sf::st_sfc(point))
point_sf$name <- c("my location")
# Create second feature
geom = sf::st_sfc(sf::st_point(c(6, 8)))
n = c("your location")
sec_point_sf <- sf::st_sf(geometry = geom, name = n)
#merge two features into sf-object two_points_sf
two_points_sf <- rbind(point_sf, sec_point_sf)
View(two_points_sf)
To save and manage your code efficiently, create an **R Script** in RStudio (File > New File > R Script). Select the code in the R Script Window and click 'Run' to execute it. Scripts offer the advantage of running multiple lines of code at once and keeping a record of your work.
rectangle_metrics <- function (height, width) {
area <- height * width
perimeter <- 2 * (height + width)
return(list(area = area, perimeter = perimeter))
}
View(rectangle_metrics)
sf::st_geometry(nc) %>%
sf::st_centroid() %>%
sf::st_write("data/nc-centroids.shp", delete_dsn = TRUE) %>%
plot(pch = 3, col = 'red')
